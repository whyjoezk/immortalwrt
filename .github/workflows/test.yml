name: OpenWrt-CI

on:
  push:
    branches:
      - openwrt-18.06-k5.4

jobs:

  build_openwrt:

    name: Build OpenWrt firmware

    runs-on: ubuntu-20.04

    if: github.event.repository.owner.id == github.event.sender.id

    steps:

      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: master

      - name: Space cleanup
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
          sudo apt update -y
          sudo apt full-upgrade -y
          sudo apt install -y ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \
            bzip2 ccache cmake cpio curl device-tree-compiler ecj fastjar flex gawk gettext gcc-multilib g++-multilib \
            git gperf haveged help2man intltool lib32gcc1 libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev \
            libmpc-dev libmpfr-dev libncurses5-dev libncursesw5 libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz \
            mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pip python3-ply \
            python-docutils qemu-utils re2c rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip \
            vim wget xmlto xxd zlib1g-dev
          sudo -E apt-get -qq clean
          sudo ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
          docker image prune -a -f
          df -h
      - name: add app
        run: |
          echo 'src-git helloworld https://github.com/fw876/helloworld' >>feeds.conf.default
          cd package/emortal/
          git clone -b 18.06 https://github.com/jerrykuku/luci-theme-argon.git
          git clone --depth=1 https://github.com/jerrykuku/lua-maxminddb.git
          git clone --depth=1 https://github.com/jerrykuku/luci-app-vssr.git
          git clone --depth=1 https://github.com/xiaorouji/openwrt-passwall.git
      - name: Update feeds
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a
      - name: Generate configuration file
        run: |
          rm -f ./.config*
          touch ./.config
          cat >> .config <<EOF
          CONFIG_TARGET_x86=y
          CONFIG_TARGET_x86_64=y
          CONFIG_TARGET_x86_64_DEVICE_generic=y
          CONFIG_LIBCURL_COOKIES=y
          CONFIG_LIBCURL_CRYPTO_AUTH=y
          CONFIG_LIBCURL_FILE=y
          CONFIG_LIBCURL_FTP=y
          CONFIG_LIBCURL_HTTP=y
          CONFIG_LIBCURL_LDAP=y
          CONFIG_LIBCURL_LDAPS=y
          CONFIG_LIBCURL_NGHTTP2=y
          CONFIG_LIBCURL_OPENSSL=y
          CONFIG_LIBCURL_PROXY=y
          CONFIG_LIBCURL_TFTP=y
          CONFIG_LIBCURL_THREADED_RESOLVER=y
          CONFIG_LIBCURL_TLS_SRP=y
          CONFIG_LIBCURL_UNIX_SOCKETS=y
          CONFIG_LIBMBEDTLS_HAVE_SSE2=y
          CONFIG_LIBSODIUM_MINIMAL=y
          CONFIG_PACKAGE_bash=y
          CONFIG_PACKAGE_boost=y
          CONFIG_PACKAGE_boost-date_time=y
          CONFIG_PACKAGE_boost-program_options=y
          CONFIG_PACKAGE_boost-system=y
          CONFIG_PACKAGE_chinadns-ng=y
          CONFIG_PACKAGE_coreutils=y
          CONFIG_PACKAGE_coreutils-base64=y
          CONFIG_PACKAGE_coreutils-nohup=y
          CONFIG_PACKAGE_curl=y
          CONFIG_PACKAGE_dns2socks=y
          CONFIG_PACKAGE_haproxy=y
          CONFIG_PACKAGE_ip-full=y
          CONFIG_PACKAGE_ipset=y
          CONFIG_PACKAGE_ipt2socks=y
          CONFIG_PACKAGE_iptables-mod-iprange=y
          CONFIG_PACKAGE_iptables-mod-tproxy=y
          CONFIG_PACKAGE_kcptun-client=y
          CONFIG_PACKAGE_kcptun-config=y
          CONFIG_PACKAGE_kmod-ip6tables=y
          CONFIG_PACKAGE_kmod-ipt-iprange=y
          CONFIG_PACKAGE_kmod-ipt-tproxy=y
          CONFIG_PACKAGE_kmod-nf-ipt6=y
          CONFIG_PACKAGE_kmod-nf-reject6=y
          CONFIG_PACKAGE_libatomic=y
          CONFIG_PACKAGE_libbpf=y
          CONFIG_PACKAGE_libcares=y
          CONFIG_PACKAGE_libcurl=y
          CONFIG_PACKAGE_libelf=y
          CONFIG_PACKAGE_libev=y
          CONFIG_PACKAGE_libipset=y
          CONFIG_PACKAGE_libltdl=y
          CONFIG_PACKAGE_liblua5.3=y
          CONFIG_PACKAGE_libmaxminddb=y
          CONFIG_PACKAGE_libmbedtls=y
          CONFIG_PACKAGE_libmnl=y
          CONFIG_PACKAGE_libnghttp2=y
          CONFIG_PACKAGE_libopenldap=y
          CONFIG_PACKAGE_libpcre=y
          CONFIG_PACKAGE_libreadline=y
          CONFIG_PACKAGE_libsasl2=y
          CONFIG_PACKAGE_libsodium=y
          CONFIG_PACKAGE_libstdcpp=y
          CONFIG_PACKAGE_libudns=y
          CONFIG_PACKAGE_libuv=y
          CONFIG_PACKAGE_lua-maxminddb=y
          CONFIG_PACKAGE_luasocket=y
          # CONFIG_PACKAGE_luci-app-diskman_INCLUDE_btrfs_progs is not set
          # CONFIG_PACKAGE_luci-app-diskman_INCLUDE_lsblk is not set
          CONFIG_PACKAGE_luci-app-passwall=y
          CONFIG_PACKAGE_luci-app-ssr-plus=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Kcptun=y
          CONFIG_PACKAGE_luci-app-vlmcsd=y
          CONFIG_PACKAGE_luci-app-vssr=y
          CONFIG_PACKAGE_luci-compat=y
          CONFIG_PACKAGE_luci-i18n-passwall-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-ssr-plus-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-vlmcsd-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-vssr-zh-cn=y
          CONFIG_PACKAGE_luci-theme-argon=y
          CONFIG_PACKAGE_microsocks=y
          CONFIG_PACKAGE_resolveip=y
          CONFIG_PACKAGE_shadowsocks-libev-config=y
          CONFIG_PACKAGE_shadowsocks-libev-ss-local=y
          CONFIG_PACKAGE_shadowsocks-libev-ss-redir=y
          CONFIG_PACKAGE_shadowsocks-libev-ss-server=y
          CONFIG_PACKAGE_shadowsocksr-libev-ssr-check=y
          CONFIG_PACKAGE_shadowsocksr-libev-ssr-local=y
          CONFIG_PACKAGE_shadowsocksr-libev-ssr-redir=y
          CONFIG_PACKAGE_shadowsocksr-libev-ssr-server=y
          CONFIG_PACKAGE_simple-obfs=y
          CONFIG_PACKAGE_tcping=y
          CONFIG_PACKAGE_trojan=y
          CONFIG_PACKAGE_trojan-plus=y
          CONFIG_PACKAGE_unzip=y
          CONFIG_PACKAGE_v2ray-core=y
          CONFIG_PACKAGE_v2ray-plugin=y
          CONFIG_PACKAGE_vlmcsd=y
          CONFIG_PACKAGE_wget-ssl=y
          CONFIG_PACKAGE_xray-core=y
          CONFIG_PACKAGE_xray-plugin=y
          CONFIG_PACKAGE_zlib=y
          CONFIG_PCRE_JIT_ENABLED=y
          # CONFIG_UnblockNeteaseMusic_Go is not set
          # CONFIG_UnblockNeteaseMusic_NodeJS is not set
          CONFIG_VMDK_IMAGES=y
          CONFIG_boost-compile-visibility-hidden=y
          CONFIG_boost-runtime-shared=y
          CONFIG_boost-static-and-shared-libs=y
          CONFIG_boost-variant-release=y
          EOF
          sed -i 's/^[ \t]*//g' ./.config
          make defconfig

      - name: Make download
        run: |
          make download -j8
          find dl -size -1024c -exec rm -f {} \;
      - name: Compile firmware
        run: |
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin
      - name: Prepare artifact
        run: |
          mkdir -p ./artifact/firmware
          mkdir -p ./artifact/package
          mkdir -p ./artifact/buildinfo
          rm -rf $(find ./bin/targets/ -type d -name "packages")
          cp -rf $(find ./bin/targets/ -type f) ./artifact/firmware/
          cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
          cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/
      - name: Deliver buildinfo
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_buildinfo
          path: ./artifact/buildinfo/

      - name: Deliver package
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_package
          path: ./artifact/package/

      - name: Deliver firmware
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_firmware
          path: ./bin/targets/
  

      - name: Upload release asset
        # if: github.event == 'release'
        # uses: svenstaro/upload-release-action@v2
        uses: svenstaro/upload-release-action@d8cafc3c8751f88ceb949832cb42148798fb08d9
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./artifact/firmware/*
          tag: ${{ github.ref }}-simplify
          file_glob: true
